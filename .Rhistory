?matrix
a<-c(2,6,9)
b<-c(3,5,4)
c<-c(3,6,5)
matrix(a,b,c, nrow=3,ncol=3)
d<-(a,b,c)
matrix(1:6, nrow=3,ncol=3)
m <- matrix(1:6, nrow=3,ncol=3)
solve(m)
m <- matrix(1:6, nrow=3,ncol=2)
solve(m)
m <- matrix(3:9, nrow=3,ncol=3)
m <- matrix(3:8, nrow=3,ncol=3)
solve(m)
getwd()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
z<-makeVector()
z
x
d<-c(2,4,6,8)
z$set(d)
x
z$get()
help($get)
help(set)
??set
z
class(z)
unclass(z)
z$set
z[[1]]
z[[2]]
set(d)
z$setmean
mean(d)
z$setmean(mean(d))
z$getmean()
z$getmean(m)
z$getmean(d)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(z)
d<-c(1,2,3,4)
z$set(d)
z$getmean()
cachemean(z)
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() x
setinverse <- function(solve) inverse <<- solve
getinverse <- function() inverse
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cacheSolve <- function(x, ...) {
inverse <- x$getinverse()
if(!is.null(inverse)) {
message("getting cached data")
return(inverse)
}
data <- x$get()
inverse <- solve(data)
x$setinverse(inverse)
inverse
}
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
m = rbind(c(1,-1/4),c(-1/4,1))
matrix=makeCacheMatrix(m)
matrix$get()
source("cachematrix.R")
m = rbind(c(1,-1/4),c(-1/4,1))
matrix=makeCacheMatrix(m)
matrix$get()
source("makeVector.R")
a <- makeVector(c(1,2,3,4))
a$get()
matrix
testmatrix <- matrix()
testmatrix
a$get()
a$setmean()
a$setmean(5)
a$getmean()
a <- makeVector(c(1,2,3,4))
m
x
a$getmean()
rm()
source("cachematrix_test.R")
m <- matrix(c(-1,-2,1,1),2,2)
x <- makeCacheMatrix(m)
x$get()
minv <- cacheSolve(x)
minv
inv <- cacheSolve(x)
inv
x$get()
cacheSolve(x)
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
m <- matrix(c(-1,-2,1,1),2,2)
x <- makeCacheMatrix(m)
x$get()
x$getinverse
x$getinverse()
cacheSolve(x)
matrix <- makeCacheMatrix(m)
cacheSolve(matrix)
solve(matrix)
?solve
m <- matrix(c(-1,-2,1,1),2,2)
m
solve(m)
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
m <- matrix(c(-1,-2,1,1),2,2)
x <- makeCacheMatrix(m)
x$get()
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
cacheSolve(x)
data <- x$get()
data
inverse <- solve(data)
inverse
x$setinverse(inv)
inv
x$getinverse()
x$set(matrix(c(0,5,99,66),2,2))
x$get()
cacheSolve(x)
matr <- matrix(c(-1,-2,1,1),2,2)
lulu <- makeCacheMatrix(matr)
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
lulu <- makeCacheMatrix(matr)
lulu$get()
cacheSolve(lulu)
inv <-NULL
cacheSolve(lulu)
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachesolve_test.R')
source("cachematrix_test.R")
source("cachesolve_test.R")
matr <- matrix(c(-1,-2,1,1),2,2)
lulu <- makeCacheMatrix(matr)
lulu$get()
cacheSolve(matr)
cacheSolve(lulu)
inv <- x$getinverse()
inv <- lulu$getinverse()
inv
!is.null(inv)
data <- x$get()
data <- lulu$get()
inverse <- solve(data)
inverse
inv
lulu$setinverse(inv)
inv
lulu$setinverse(inverse)
inv
inverse
setinverse <- function(inverse) inv <<- inverse
inv
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachesolve_test.R')
inverse <- solve(data)
x$setinverse(inv)
lulu$setinverse(inv)
inv
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachematrix_test.R')
lulu$setinverse(inv)
inv
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachesolve_test.R')
cacheSolve(lulu)
source("makeVector.R")
a <- makeVector(c(1,2,3,4))
a$get()
a$getmean()
cachemean(a)
cachemean(a)
cachemean(a)
a$setmean(c(10,20,30,40))
a$getmean
a$getmean()
a$getmean()
a$set(c(10,20,30,40))
a$getmean()
cachemean(a)
cachemean(a)
a$getmean()
?matrix()
source('C:/Users/marco/Dropbox/Coursera/R/week3/ProgrammingAssignment2/cachesolve_test.R')
